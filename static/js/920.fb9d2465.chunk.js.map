{"version":3,"file":"static/js/920.fb9d2465.chunk.js","mappings":"iKACA,EAA0B,yBAA1B,EAAgE,4BAAhE,EAAyG,4BAAzG,EAAmJ,6BCAnJ,G,QAA+B,iCAA/B,EAA8E,gCAA9E,EAAuH,0BAAvH,EAAgK,gCAAhK,EAAmN,oC,mBCenN,EAbkB,SAACA,GACf,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKD,UAAWC,EAAeC,IAAI,4DAEvC,gBAAKF,UAAS,UAAKC,EAAL,YAA4BA,EAAAA,QAA1C,UACI,SAACE,EAAA,EAAD,CAASC,GAAI,YAAcL,EAAMM,GAAIL,UAAWC,EAAhD,SAA0EF,EAAMO,aCThG,EAA0B,4BAA1B,EAAoE,gCCUpE,EARmB,SAACP,GAChB,OACQ,gBAAKC,UAAWC,EAAhB,UACI,cAAGD,UAAWC,EAAd,SAAmCF,EAAMQ,a,uCCkB5CC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAjBZ,SAACV,GACtB,OACE,kBAAMY,SAAUZ,EAAMa,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CACEC,UAAWC,EAAAA,GACXT,KAAM,iBACNU,YAAa,qBACbC,SAAU,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAiB,UAG1C,0BACE,6CCWR,EAxBgB,SAACpB,GACf,IAAIqB,EAAkBrB,EAAMsB,YAAYC,SAASC,KAAI,SAACC,GAAD,OACnD,SAAC,EAAD,CAAYjB,QAASiB,EAAEjB,aAErBkB,EAAkB1B,EAAMsB,YAAYK,MAAMH,KAAI,SAACI,GAAD,OAChD,SAAC,EAAD,CAAWrB,KAAMqB,EAAErB,KAAMD,GAAIsB,EAAEtB,QAMjC,OACE,4BACE,iBAAKL,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAAoCwB,KACpC,gBAAKzB,UAAWC,EAAhB,SAAoCmB,QAEtC,gBAAKpB,UAAWC,EAAhB,UACE,SAACO,EAAD,CAAqBG,SAVP,SAACiB,GACnB7B,EAAM8B,YAAYD,EAAOE,yB,oBCO7B,GAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAdoB,SAACC,GACrB,MAAO,CACLZ,YAAaY,EAAMZ,gBAGE,SAACa,GACxB,MAAO,CACLL,YAAa,SAACC,GACZI,GAASC,EAAAA,EAAAA,GAAwBL,SAOrCM,EAAAA,EAFF,CAGEC,I,iJCpBEC,EAA0B,SAACL,GAAD,MAAY,CACtCM,OAAQN,EAAMO,KAAKD,SAGVH,EAAmB,SAACK,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAKC,KAAK5C,MAAMwC,QACT,SAACE,GAAD,UAAeE,KAAK5C,SADI,SAAC,IAAD,CAAUK,GAAI,eAHJ,GACbwC,EAAAA,WAQhC,OAFuCZ,EAAAA,EAAAA,IAAQM,EAARN,CAAiCU","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-1/./src/components/Dialogs/Dialog/OneDialog.module.css?85c8","components/Dialogs/Dialog/OneDialog.jsx","webpack://react-1/./src/components/Dialogs/Massage/MassageOne.module.css?c951","components/Dialogs/Massage/MassageOne.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__pzOSc\",\"dialogsOne\":\"Dialogs_dialogsOne__xF4Gw\",\"massageOne\":\"Dialogs_massageOne__Hwsc+\",\"massageForm\":\"Dialogs_massageForm__vFmVd\"};","// extracted by mini-css-extract-plugin\nexport default {\"oneDialogDiv\":\"OneDialog_oneDialogDiv__D6cs7\",\"oneDialogimg\":\"OneDialog_oneDialogimg__FbuKl\",\"imgAva\":\"OneDialog_imgAva__SlvNJ\",\"dialogsItems\":\"OneDialog_dialogsItems__ZbuRV\",\"dialogsItemsText\":\"OneDialog_dialogsItemsText__5T0lm\",\"active\":\"OneDialog_active__0czGz\"};","import styles from './OneDialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst OneDialog = (props) => {\r\n    return (\r\n        <div className={styles.oneDialogDiv}>\r\n            <div className={styles.oneDialogimg}>\r\n                <img className={styles.imgAva} src='https://i.ytimg.com/vi/1Ne1hqOXKKI/maxresdefault.jpg'/>\r\n            </div>\r\n            <div className={`${styles.dialogsItems} ${styles.dialogsItemsText.active}`}>\r\n                <NavLink to={'/dialogs/' + props.id} className={styles.dialogsItemsText}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default OneDialog","// extracted by mini-css-extract-plugin\nexport default {\"massage\":\"MassageOne_massage__Td0ne\",\"massageText\":\"MassageOne_massageText__YcB5l\"};","import styles from './MassageOne.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst MassageOne = (props) => {\r\n    return (\r\n            <div className={styles.massage}>\r\n                <p className={styles.massageText}>{props.massage}</p>\r\n            </div>\r\n    );\r\n\r\n}\r\nexport default MassageOne","import styles from \"./Dialogs.module.css\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {Textarea} from \"../common/FormControl/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\n\nconst AddMassageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} >\n      <div>\n        <Field\n          component={Textarea}\n          name={\"newMassageBody\"}\n          placeholder={\"Enter your massage\"}\n          validate={[required, maxLengthCreator(20)]}\n        />\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\nexport const AddMassageFormRedux = reduxForm({ form: \"dialogAddMassageForm\" })(\n    AddMassageForm\n);\n","import styles from \"./Dialogs.module.css\";\nimport React from \"react\";\nimport OneDialog from \"./Dialog/OneDialog\";\nimport MassageOne from \"./Massage/MassageOne\";\nimport { AddMassageFormRedux } from \"./DialogsForm\";\n\nconst Dialogs = (props) => {\n  let massageElements = props.dialogsPage.massages.map((m) => (\n    <MassageOne massage={m.massage} />\n  ));\n  let dialogsElements = props.dialogsPage.names.map((d) => (\n    <OneDialog name={d.name} id={d.id} />\n  ));\n\n  let addNewMassage = (values) => {\n    props.sendMassage(values.newMassageBody);\n  };\n  return (\n    <div>\n      <div className={styles.dialogs}>\n        <div className={styles.dialogsOne}>{dialogsElements}</div>\n        <div className={styles.massageOne}>{massageElements}</div>\n      </div>\n      <div className={styles.massageForm}>\n        <AddMassageFormRedux onSubmit={addNewMassage} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import {\n  addMassageActionCreator,\n} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  };\n};\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMassage: (newMassageBody) => {\n      dispatch(addMassageActionCreator(newMassageBody));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n","import {Component} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n      return <Component {...this.props} />;\n    }\n  }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n};"],"names":["props","className","styles","src","NavLink","to","id","name","massage","AddMassageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","maxLengthCreator","massageElements","dialogsPage","massages","map","m","dialogsElements","names","d","values","sendMassage","newMassageBody","compose","connect","state","dispatch","addMassageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}